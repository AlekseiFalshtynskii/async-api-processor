plugins {
    id 'java-library'
    id 'maven-publish'
    id 'io.spring.dependency-management' version '1.1.4'
}

apply from: "gradle/libraries.gradle"

version = "0.0.6"
group = "com.alekseif"
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

java {
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    api "com.github.javaparser:javaparser-symbol-solver-core:${javaparserVersion}"
    api "com.vladmihalcea:hibernate-types-52:${hibernateTypesVersion}"
    api "org.springdoc:springdoc-openapi-ui:${springdocVersion}"
    api "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    api "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    api "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    api "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"

    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

configurations.all {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }

    repositories {
        mavenLocal()
    }
}
